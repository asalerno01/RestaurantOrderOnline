// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalernoServer.Models;

#nullable disable

namespace SalernoServer.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230209185723_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SalernoServer.Models.Account", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SalernoServer.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double>("AssignedCost")
                        .HasColumnType("double");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<double>("Cost")
                        .HasColumnType("double");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<bool>("Discountable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemUUID")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastSoldDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LiabilityItem")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LiabilityRedemptionTender")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecommendedOrder")
                        .HasColumnType("int");

                    b.Property<int>("ReorderTrigger")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasColumnType("longtext");

                    b.Property<string>("Secret")
                        .HasColumnType("longtext");

                    b.Property<string>("Supplier")
                        .HasColumnType("longtext");

                    b.Property<string>("TaxGroupOrRate")
                        .HasColumnType("longtext");

                    b.Property<bool>("Taxable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TrackingInventory")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UPC")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SalernoServer.Models.Modifier", b =>
                {
                    b.Property<long>("ModifierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ModifierId");

                    b.ToTable("Modifiers");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierAddon", b =>
                {
                    b.Property<long>("ModifierAddonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifierId")
                        .HasColumnType("bigint");

                    b.HasKey("ModifierAddonId");

                    b.HasIndex("ModifierId");

                    b.ToTable("ModifierAddons");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierGroup", b =>
                {
                    b.Property<long>("ModifierGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifierId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ModifierGroupId");

                    b.HasIndex("ModifierId");

                    b.ToTable("ModifierGroups");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierNoOption", b =>
                {
                    b.Property<long>("ModifierNoOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifierId")
                        .HasColumnType("bigint");

                    b.HasKey("ModifierNoOptionId");

                    b.HasIndex("ModifierId");

                    b.ToTable("ModifierNoOptions");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierOption", b =>
                {
                    b.Property<long>("ModifierOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifierAddonId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifierGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifierNoOptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PriceIncrease")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ModifierOptionId");

                    b.HasIndex("ModifierAddonId");

                    b.HasIndex("ModifierGroupId");

                    b.HasIndex("ModifierNoOptionId");

                    b.ToTable("ModifierOption");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierAddon", b =>
                {
                    b.HasOne("SalernoServer.Models.Modifier", null)
                        .WithMany("Addons")
                        .HasForeignKey("ModifierId");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierGroup", b =>
                {
                    b.HasOne("SalernoServer.Models.Modifier", null)
                        .WithMany("Groups")
                        .HasForeignKey("ModifierId");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierNoOption", b =>
                {
                    b.HasOne("SalernoServer.Models.Modifier", null)
                        .WithMany("NoOptions")
                        .HasForeignKey("ModifierId");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierOption", b =>
                {
                    b.HasOne("SalernoServer.Models.ModifierAddon", null)
                        .WithMany("Options")
                        .HasForeignKey("ModifierAddonId");

                    b.HasOne("SalernoServer.Models.ModifierGroup", null)
                        .WithMany("Options")
                        .HasForeignKey("ModifierGroupId");

                    b.HasOne("SalernoServer.Models.ModifierNoOption", null)
                        .WithMany("Options")
                        .HasForeignKey("ModifierNoOptionId");
                });

            modelBuilder.Entity("SalernoServer.Models.Modifier", b =>
                {
                    b.Navigation("Addons");

                    b.Navigation("Groups");

                    b.Navigation("NoOptions");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierAddon", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierGroup", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("SalernoServer.Models.ModifierNoOption", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
